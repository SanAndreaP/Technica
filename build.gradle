buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            name = "forge"
            url  = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = 'CodeChicken'
            url  = 'http://chickenbones.net/maven/'
        }
    }

    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.0-SNAPSHOT'
        classpath 'codechicken:CodeChickenCore:1.8-1.0.5.36:dev'
        classpath 'codechicken:NotEnoughItems:1.8-1.0.5.104:dev'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'scala'

version = "0.3.5.1"
group   = "com.mlb.technica"
archivesBaseName = "technica"

minecraft {
    version = "1.8-11.14.3.1504"
    runDir = "eclipse"
    mappings = "snapshot_20141130"
}

task downloadCCLDev(type:LibDownloader) {
    sourceUrl = 'http://files.minecraftforge.net/maven/codechicken/CodeChickenLib/1.8-1.1.2.139/CodeChickenLib-1.8-1.1.2.139-dev.jar'
    target    = file('libs/CodeChickenLib-dev.jar')
}

task downloadCCLSrc(type:LibDownloader) {
    sourceUrl = 'http://files.minecraftforge.net/maven/codechicken/CodeChickenLib/1.8-1.1.2.139/CodeChickenLib-1.8-1.1.2.139-src.jar'
    target    = file('libs/CodeChickenLib-src.jar')
}

repositories {
    maven {
        name = 'CodeChicken'
        url  = 'http://chickenbones.net/maven/'
    }
    maven {
        name = 'forge'
        url  = 'http://files.minecraftforge.net/maven'
    }

}

dependencies {
    compile 'codechicken:CodeChickenCore:1.8-1.0.5.36:dev'
    compile 'codechicken:CodeChickenCore:1.8-1.0.5.36:src'
    compile 'codechicken:NotEnoughItems:1.8-1.0.5.104:dev'
    compile 'codechicken:NotEnoughItems:1.8-1.0.5.104:src'
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

idea { module { inheritOutputDirs = true } }

class LibDownloader extends DefaultTask {
    @Input
    String sourceUrl

    @OutputFile
    File target

    @TaskAction
    void download() {
        ant.get(src: sourceUrl, dest: target)
    }
}